- var util = require('util');
- var path = require('path');
- var data = require(path.join(root_dir, 'data', 'cv.json'));
- var title = util.format("%s's CV", data.name);
include _head.jade

mixin element_title3(title_array)
    each title, lang in title_array
        h3(lang=lang)=title

mixin element_title(title_array)
    each title, lang in title_array
        h2(lang=lang)=title

mixin b_opt_lang(line)
    if line.lang
        b(lang=line.lang)=line.line
    else
        b=line.line

mixin li_opt_lang(line)
    if line.lang
        li(lang=line.lang)=line.line
    else
        li=line.line

mixin par_opt_lang(line)
    if line.lang
        p(lang=line.lang)=line.line
    else
        p=line.line

mixin multi_line(line)
    if line.type == "bold_line"
        +b_opt_lang(line)
    else if line.type == "single_line"
        | #{line.line}


body(class="cv2")
    header
        h1=data.name
        nav(class="lang_switcher")
            each lang in data.langs
                - var href = "#" + lang.code;
                - var lang_icon_style = util.format(("background-image: url('%s')"), lang.icon)
                a(href=href title=lang.title  style=lang_icon_style)

    each lang in data.langs
        div(class="lang_anchor" id=lang.code)

    div(class="main lang_switch")
        section(class="basic")
            - var basic_middle_idx = Math.round(data.basic.length / 2);
            - var basic_left = data.basic.slice(0, basic_middle_idx)
            - var basic_right = data.basic.slice(basic_middle_idx)
            - var basic_all = [{class: "left", data: basic_left}, {class: "right", data: basic_right}]
            each table in basic_all
                table(class=table.class)
                    each item in table.data
                        tr
                            each lang_item, lang_key in item.key
                                td(lang=lang_key)=lang_item
                            if item.type == "str"
                                if typeof item.value == "string"
                                    td=item.value
                                else
                                    each lang_item, lang_key in item.value
                                        td(lang=lang_key)=lang_item
                            else
                                td
                                    each link in item.value
                                        a(title=link.title class="link_logo" href=link.href target="_blank" style="background-image: url('#{link.logo}')")

        section(class="element")
            - var expertise = data.elements.expertise
            +element_title(expertise.title)
            section
                each line in expertise.data
                    if line.type == "single_line"
                        +par_opt_lang(line)
                    else if line.type == "multi_line"
                        p
                            each sub_line in line.lines
                                +multi_line(sub_line)

        section(class="element")
            - var experience = data.elements.experience;
            +element_title(experience.title)
            each job_data, job_idx in experience.data
                - var toogle_id = util.format("job-%d", job_idx);
                section(class="job")
                    header(class="title")
                        label(class="spoiler_link" for=toogle_id)
                            +element_title3(job_data.title)
                        each location, lang in job_data.location
                            p(class="sub location" lang=lang)=location
                        each date, lang in job_data.dates
                            p(class="sub date" lang=lang)=date
                    input(id=toogle_id class="spoiler_box" type="checkbox")
                    ul(class="spoiler")
                        each line in job_data.lines
                            if line.type == "single_line"
                                +li_opt_lang(line)
                            else if line.type == "multi_line"
                                li
                                    each sub_line in line.lines
                                        +multi_line(sub_line)

        section(class="element")
            - var languages = data.elements.languages;
            +element_title(languages.title)
            section
                each lang_skill in languages.data
                    each lang, code in lang_skill
                        p(lang=code)
                            b=lang.title
                            | #{lang.level}

        section(class="element")
            - var education = data.elements.education;
            +element_title(education.title)
            section
                each education_data, idx in education.data
                    section(class="education")
                        header(class="title")
                            each title, code in education_data.name
                                if education_data.title
                                    h3(lang=code title=education_data.title[code])=title
                                else
                                    h3(lang=code)=title
                            p(class="sub date")=education_data.dates
                        section
                            each info, code in education_data.info
                                p(lang=code)
                                    b=education.info_map[code].major
                                    | #{info.major}
                                p(lang=code)
                                    b=education.info_map[code].degree
                                    | #{info.degree}
                        if idx < (education.data.length - 1)
                            br

        section(class="element")
            - var interests = data.elements.interests;
            +element_title(interests.title)
            section
                each data, code in interests.data
                    p(lang=code)=data
